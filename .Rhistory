# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
timeline
timeline
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
timeline
ames
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
golem::add_module( name = "plots_module" ) # Name of the module
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
gc()
shiny::runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
gc()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
e_visual_map()
?e_visual_map()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
?e_legend()
?e_legend()
?e_legend()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
df
quake_df
quake_selected
browse_spinners
library(waiter)
browse_spinners
browse_spinners()
library(waiter)
browse_spinners()
spin_1()
waiter::spin_loaders(42)
waiter::spin_loaders(41)
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
gc()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
shiny::runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
url <- ("https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_week.csv")
dff <- readr::read_csv(url, col_types = readr::cols())
dtt <- as.POSIXlt(Sys.time(), tz = "UTC")
head(dff$mag)
head(dff$size)
dff$size <- cut(dff$mag,breaks = c(-Inf, 3.9, 4.9, 5.9, 6.9, 7.9, Inf),
labels=c("minor", "light", "moderate", "strong", "major", "great 8+"))
head(dff$size)
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
head(dff$size)
head(dff$mag)
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
nrow(dff)
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
runApp('~/workingdirectory/shiny-server/CoronaOutbreak')
runApp('~/workingdirectory/shiny-server/CoronaOutbreak')
shiny::runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
library(pkgdown)
# Install release version from CRAN
install.packages("pkgdown")
library(pkgdown)
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
mobilequake::run_app()
pkgdown::build_site()
rstudioapi::navigateToFile( "dev/02_dev.R" )
pkgdown::build_site()
nchar("Real-time Earthquake tracker built with #ShinyMobile & #leaflet & waiter & sever.  #rstats #r4ds #rbloggers Checkout ShinyMobile > https://rinterface.github.io/shinyMobile/ @divadnojnarg  echarts4r https://echarts4r.john-coene.com/")
nchar("Real-time Earthquake tracker built with #ShinyMobile & #leaflet & waiter & sever.  #rstats #r4ds #rbloggers Checkout ShinyMobile > https://rinterface.github.io/shinyMobile/ @divadnojnarg  echarts4r https://echarts4r.john-coene.com/  @jdatap")
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
url <- ("https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_week.csv")
dff <- readr::read_csv(url, col_types = readr::cols())
names(dff)
max(dff$time)
max(dff$time)
max(dff$time)
max(dff$time)
runApp('~/workingdirectory/CoronaOutbreak/firstshinymobileapp/firstshinymobileapp')
dff %>% e_charts(time) %>%
e_bar(mag) %>%
e_axis_labels(x = "Date",y= "Magnitute") %>% # axis labels
e_title("Timeline" ) %>%  # Add title
e_legend(show=FALSE) %>%
e_theme("halloween") %>%  # theme
e_tooltip(trigger = "axis")  %>% #tooltip
e_visual_map(mag, orient = "horizontal",
right = "center",
top = 5,
textStyle = list(color = "#fff"), scale = NULL)
dff %>% e_charts(time) %>%
e_bar(mag) %>%
e_axis_labels(x = "Date",y= "Magnitute") %>% # axis labels
e_title("Timeline" ) %>%  # Add title
e_legend(show=FALSE) %>%
e_theme("halloween") %>%  # theme
e_tooltip(trigger = "axis")  %>% #tooltip
e_visual_map(mag, orient = "horizontal",
right = "center",
top = 5,
textStyle = list(color = "#fff"), scale = NULL)
library(tidyverse)
library(echarts4r)
dff %>% e_charts(time) %>%
e_bar(mag) %>%
e_axis_labels(x = "Date",y= "Magnitute") %>% # axis labels
e_title("Timeline" ) %>%  # Add title
e_legend(show=FALSE) %>%
e_theme("halloween") %>%  # theme
e_tooltip(trigger = "axis")  %>% #tooltip
e_visual_map(mag, orient = "horizontal",
right = "center",
top = 5,
textStyle = list(color = "#fff"), scale = NULL)
gc()
