{
    "data" : [
        "library(roxygen2)",
        "> ",
        "options(golem.app.prod = FALSE) ",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "[[1]]\nNULL\n\n",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "mobilequake::run_app()",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:3682\n",
        "Warning:",
        " Error in f7SingleLayout: could not find function \"f7SingleLayout\"\n",
        "  59: [37mdots_list[39m\n",
        "",
        "  58: [37mshiny::tags$div[39m\n",
        "",
        "  51: [37mshinyMobile::f7Page[39m\n",
        "",
        "  48: [34m[1mui [C:/Users/serda/Documents/workingdirectory/CoronaOutbreak/mobilequake/R/app_ui.R#3][22m[39m\n",
        "\n",
        "\n",
        "> ",
        "mobilequake::run_app()",
        "\nListening on http://127.0.0.1:3682\n",
        "Warning:",
        " Error in f7SingleLayout: could not find function \"f7SingleLayout\"\n",
        "  59: [37mdots_list[39m\n",
        "",
        "  58: [37mshiny::tags$div[39m\n",
        "",
        "  51: [37mshinyMobile::f7Page[39m\n",
        "",
        "  48: [34m[1mui [C:/Users/serda/Documents/workingdirectory/CoronaOutbreak/mobilequake/R/app_ui.R#3][22m[39m\n",
        "\n",
        "\n",
        "> ",
        "# Set options here",
        "> ",
        "options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode",
        "> ",
        "",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "[[1]]\nNULL\n\n[[2]]\nNULL\n\n[[3]]\nNULL\n\n",
        "> ",
        "# rm(list=ls(all.names = TRUE))",
        "> ",
        "",
        "> ",
        "# Document and reload your package",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "mobilequake::run_app()",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:3682\n",
        "Warning:",
        " Error in f7SingleLayout: could not find function \"f7SingleLayout\"\n",
        "  59: [37mdots_list[39m\n",
        "",
        "  58: [37mshiny::tags$div[39m\n",
        "",
        "  51: [37mshinyMobile::f7Page[39m\n",
        "",
        "  48: [34m[1mui [C:/Users/serda/Documents/workingdirectory/CoronaOutbreak/mobilequake/R/app_ui.R#3][22m[39m\n",
        "\n",
        "\n",
        "> ",
        "",
        "> ",
        "# Set options here",
        "> ",
        "options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode",
        "> ",
        "",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "[[1]]\nNULL\n\n[[2]]\nNULL\n\n[[3]]\nNULL\n\n",
        "> ",
        "# rm(list=ls(all.names = TRUE))",
        "> ",
        "",
        "> ",
        "# Document and reload your package",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "mobilequake::run_app()",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:3682\n",
        "Warning:",
        " Error in : 'leafletOutput' is not an exported object from 'namespace:shiny'\n",
        "  71: [37mstop[39m\n",
        "",
        "  70: [37mgetExportedValue[39m\n",
        "",
        "  69: [37m::[39m\n",
        "",
        "  48: [34m[1mui [C:/Users/serda/Documents/workingdirectory/CoronaOutbreak/mobilequake/R/app_ui.R#3][22m[39m\n",
        "\n",
        "\n",
        "> ",
        "",
        "> ",
        "# Set options here",
        "> ",
        "options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode",
        "> ",
        "",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "[[1]]\nNULL\n\n[[2]]\nNULL\n\n[[3]]\nNULL\n\n",
        "> ",
        "# rm(list=ls(all.names = TRUE))",
        "> ",
        "",
        "> ",
        "# Document and reload your package",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "mobilequake::run_app()",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:3682\n",
        "Warning:",
        " Error in leafletOutput: could not find function \"leafletOutput\"\n",
        "  68: [37mdots_list[39m\n",
        "",
        "  67: [37mshiny::tags$div[39m\n",
        "",
        "  60: [37mshinyMobile::f7SingleLayout[39m\n",
        "",
        "  48: [34m[1mui [C:/Users/serda/Documents/workingdirectory/CoronaOutbreak/mobilequake/R/app_ui.R#3][22m[39m\n",
        "\n",
        "\n",
        "> ",
        "",
        "> ",
        "source('~/workingdirectory/CoronaOutbreak/mobilequake/R/app_ui.R', echo=TRUE)",
        "\n> #' @import shiny\n> app_ui <- function() {\n+   tagList(\n+     # Leave this function for adding external resources\n+     golem_add_external_resources( .... [TRUNCATED] \n\n> #' @import shiny\n> golem_add_external_resources <- function(){\n+   \n+   addResourcePath(\n+     'www', system.file('app/www', package = 'mobilequake' .... [TRUNCATED] \n",
        "> ",
        "source('~/workingdirectory/CoronaOutbreak/mobilequake/R/app_ui.R', echo=TRUE)",
        "\n> #' @import shiny\n> app_ui <- function() {\n+   tagList(\n+     # Leave this function for adding external resources\n+     golem_add_external_resources( .... [TRUNCATED] \n\n> #' @import shiny\n> golem_add_external_resources <- function(){\n+   \n+   addResourcePath(\n+     'www', system.file('app/www', package = 'mobilequake' .... [TRUNCATED] \n",
        "> ",
        "# Set options here",
        "> ",
        "options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode",
        "> ",
        "",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "[[1]]\nNULL\n\n[[2]]\nNULL\n\n[[3]]\nNULL\n\n",
        "> ",
        "# rm(list=ls(all.names = TRUE))",
        "> ",
        "",
        "> ",
        "# Document and reload your package",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "mobilequake::run_app()",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:3682\n",
        "Warning:",
        " Error in f7Init: could not find function \"f7Init\"\n",
        "  53: [37mdots_list[39m\n",
        "",
        "  52: [37mshiny::tags$html[39m\n",
        "",
        "  51: [37mshinyMobile::f7Page[39m\n",
        "",
        "  48: [34m[1mui [C:/Users/serda/Documents/workingdirectory/CoronaOutbreak/mobilequake/R/app_ui.R#3][22m[39m\n",
        "\n",
        "\n",
        "> ",
        "",
        "> ",
        "# Set options here",
        "> ",
        "options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode",
        "> ",
        "",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "[[1]]\nNULL\n\n[[2]]\nNULL\n\n[[3]]\nNULL\n\n",
        "> ",
        "# rm(list=ls(all.names = TRUE))",
        "> ",
        "",
        "> ",
        "# Document and reload your package",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "mobilequake::run_app()",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:3682\n",
        "Warning:",
        " Error in renderLeaflet: could not find function \"renderLeaflet\"\n",
        "  52: [34m[1mserver [C:/Users/serda/Documents/workingdirectory/CoronaOutbreak/mobilequake/R/app_server.R#5][22m[39m\n",
        "Error in renderLeaflet({ : could not find function \"renderLeaflet\"\n",
        "\n",
        "\n",
        "> ",
        "",
        "> ",
        "source('~/workingdirectory/CoronaOutbreak/mobilequake/R/app_ui.R', echo=TRUE)",
        "\n> #' @import shiny\n> app_ui <- function() {\n+   tagList(\n+     # Leave this function for adding external resources\n+     golem_add_external_resources( .... [TRUNCATED] \n\n> #' @import shiny\n> golem_add_external_resources <- function(){\n+   \n+   addResourcePath(\n+     'www', system.file('app/www', package = 'mobilequake' .... [TRUNCATED] \n",
        "> ",
        "# Set options here",
        "> ",
        "options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode",
        "> ",
        "",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "[[1]]\nNULL\n\n[[2]]\nNULL\n\n[[3]]\nNULL\n\n",
        "> ",
        "# rm(list=ls(all.names = TRUE))",
        "> ",
        "",
        "> ",
        "# Document and reload your package",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "mobilequake::run_app()",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:3682\n",
        "Warning:",
        " Error in : 'renderLeaflet' is not an exported object from 'namespace:shiny'\n",
        "  55: [37mstop[39m\n",
        "",
        "  54: [37mgetExportedValue[39m\n",
        "",
        "  53: [37m::[39m\n",
        "",
        "  52: [34m[1mserver [C:/Users/serda/Documents/workingdirectory/CoronaOutbreak/mobilequake/R/app_server.R#5][22m[39m\n",
        "Error : 'renderLeaflet' is not an exported object from 'namespace:shiny'\n",
        "\n",
        "\n",
        "> ",
        "",
        "> ",
        "source('~/workingdirectory/CoronaOutbreak/mobilequake/R/app_server.R', echo=TRUE)",
        "\n> #' @import shiny\n> app_server <- function(input, output,session) {\n+   datafile <- callModule(mod_map_module_server, \"map_module_ui_1\")\n+   \n+   out .... [TRUNCATED] \n",
        "> ",
        "# Set options here",
        "> ",
        "options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode",
        "> ",
        "",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "[[1]]\nNULL\n\n[[2]]\nNULL\n\n[[3]]\nNULL\n\n",
        "> ",
        "# rm(list=ls(all.names = TRUE))",
        "> ",
        "",
        "> ",
        "# Document and reload your package",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "mobilequake::run_app()",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:3682\n",
        "Warning:",
        " Error in colorFactor: could not find function \"colorFactor\"\n",
        "  [No stack trace available]\n",
        "\n",
        "\n",
        "> ",
        "",
        "> ",
        "?colorFactor()",
        "> ",
        "# Set options here",
        "> ",
        "options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode",
        "> ",
        "",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "[[1]]\nNULL\n\n[[2]]\nNULL\n\n[[3]]\nNULL\n\n",
        "> ",
        "# rm(list=ls(all.names = TRUE))",
        "> ",
        "",
        "> ",
        "# Document and reload your package",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "mobilequake::run_app()",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:3682\n",
        "Warning:",
        " Error in addProviderTiles: could not find function \"addProviderTiles\"\n",
        "  [No stack trace available]\n",
        "\n",
        "\n",
        "> ",
        "",
        "> ",
        "source('~/workingdirectory/CoronaOutbreak/mobilequake/R/mod_map_module.R', echo=TRUE)",
        "\n> # Module UI\n> \n> #' @title   mod_map_module_ui and mod_map_module_server\n> #' @description  A shiny Module.\n> #'\n> #' @param id shiny id\n> #' @param .... [TRUNCATED] \n\n> # Module Server\n> \n> #' @rdname mod_map_module\n> #' @export\n> #' @keywords internal\n> \n> mod_map_module_server <- function(input, output, session){\n .... [TRUNCATED] \n\n> ## To be copied in the UI\n> # mod_map_module_ui(\"map_module_ui_1\")\n> \n> ## To be copied in the server\n> # callModule(mod_map_module_server, \"map_mod ...\" ... [TRUNCATED] ",
        "\n",
        "> ",
        "# Set options here",
        "> ",
        "options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode",
        "> ",
        "",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "[[1]]\nNULL\n\n[[2]]\nNULL\n\n[[3]]\nNULL\n\n",
        "> ",
        "# rm(list=ls(all.names = TRUE))",
        "> ",
        "",
        "> ",
        "# Document and reload your package",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "mobilequake::run_app()",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:3682\n",
        "Warning:",
        " Error in evalAll: object 'providers' not found\n",
        "  [No stack trace available]\n",
        "\n",
        "\n",
        "> ",
        "",
        "> ",
        "?addProviderTiles()",
        "> ",
        "source('~/workingdirectory/CoronaOutbreak/mobilequake/R/mod_map_module.R', echo=TRUE)",
        "\n> # Module UI\n> \n> #' @title   mod_map_module_ui and mod_map_module_server\n> #' @description  A shiny Module.\n> #'\n> #' @param id shiny id\n> #' @param .... [TRUNCATED] \n\n> # Module Server\n> \n> #' @rdname mod_map_module\n> #' @export\n> #' @keywords internal\n> \n> mod_map_module_server <- function(input, output, session){\n .... [TRUNCATED] \n\n> ## To be copied in the UI\n> # mod_map_module_ui(\"map_module_ui_1\")\n> \n> ## To be copied in the server\n> # callModule(mod_map_module_server, \"map_mod ...\" ... [TRUNCATED] ",
        "\n",
        "> ",
        "?addProviderTiles()",
        "> ",
        "# Set options here",
        "> ",
        "options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode",
        "> ",
        "",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "[[1]]\nNULL\n\n[[2]]\nNULL\n\n[[3]]\nNULL\n\n",
        "> ",
        "# rm(list=ls(all.names = TRUE))",
        "> ",
        "",
        "> ",
        "# Document and reload your package",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "mobilequake::run_app()",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:3682\n",
        "\n",
        "\n",
        "> ",
        "",
        "\nRestarting R session...\n\n",
        "> ",
        "library(mobilequake)",
        "\nAttaching package: ‘mobilequake’\n\n",
        "The following objects are masked _by_ ‘.GlobalEnv’:\n\n    mod_map_module_server, mod_map_module_ui, run_app\n\n",
        "> ",
        "library(mobilequake)",
        "> ",
        "run_app()",
        "Error in with_golem_options(app = shinyApp(ui = app_ui, server = app_server),  : \n  could not find function \"with_golem_options\"\n",
        "> ",
        "mobilequake::run_app()",
        "\nListening on http://127.0.0.1:5259\n",
        "\n",
        "\n",
        "> ",
        "remove.packages(\"leaflet\")",
        "Removing package from ‘C:/Users/serda/Documents/R/win-library/3.6’\n(as ‘lib’ is unspecified)\n",
        "> ",
        "mobilequake::run_app()",
        "\nListening on http://127.0.0.1:5259\n",
        "Warning in read.dcf(file.path(p, \"DESCRIPTION\"), c(\"Package\", \"Version\")) :",
        "\n ",
        " cannot open compressed file 'C:/Users/serda/Documents/R/win-library/3.6/leaflet/DESCRIPTION', probable reason 'No such file or directory'\n",
        "Warning in read.dcf(file.path(p, \"DESCRIPTION\"), c(\"Package\", \"Version\")) :",
        "\n ",
        " cannot open compressed file 'C:/Users/serda/Documents/R/win-library/3.6/leaflet/DESCRIPTION', probable reason 'No such file or directory'\n",
        "\n",
        "\n",
        "> ",
        "install.packages(\"leaflet\")",
        "Installing package into ‘C:/Users/serda/Documents/R/win-library/3.6’\n(as ‘lib’ is unspecified)\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/leaflet_2.0.3.zip'\n",
        "Content type 'application/zip'",
        " length 2335328 bytes (2.2 MB)\n",
        "downloaded 2.2 MB\n\n",
        "package ‘leaflet’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\serda\\AppData\\Local\\Temp\\RtmpcZ4NbN\\downloaded_packages\n",
        "> ",
        "golem",
        "Error: object 'golem' not found\n",
        "> ",
        "library(golem)",
        "> ",
        "golem",
        "Error: object 'golem' not found\n",
        "> ",
        "packageVersion(\"golem\")",
        "[1] ‘0.1.0.9001’\n",
        "> ",
        "packageVersion(\"shinyMobile\")",
        "[1] ‘0.5.0.9000’\n",
        "> ",
        "packageVersion(\"devtools\")",
        "[1] ‘2.2.2’\n",
        "> ",
        "packageVersion(\"roxygen2\")",
        "[1] ‘7.0.2’\n",
        "> ",
        "rstudioapi::navigateToFile( \"dev/02_dev.R\" )",
        "> ",
        "usethis::use_package( \"utils\" )",
        "[32m✔[39m Setting active project to [34m'C:/Users/serda/Documents/workingdirectory/CoronaOutbreak/mobilequake'[39m\n[32m✔[39m Adding [34m'utils'[39m to [32mImports[39m field in DESCRIPTION\n[31m●[39m Refer to functions with [90m`utils::fun()`[39m\n",
        "> ",
        "# Set options here",
        "> ",
        "options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode",
        "> ",
        "",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "Error: $ operator is invalid for atomic vectors\n",
        "In addition: ",
        "Warning message:\n",
        "In FUN(X[[i]], ...) :",
        "\n ",
        " DESCRIPTION file of package 'mobilequake' is missing or broken\n",
        "> ",
        "# rm(list=ls(all.names = TRUE))",
        "> ",
        "",
        "> ",
        "# Document and reload your package",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "mobilequake::run_app()",
        "\nListening on http://127.0.0.1:5259\n",
        "\n",
        "\n",
        "> ",
        "# Set options here",
        "> ",
        "options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode",
        "> ",
        "",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "[[1]]\nNULL\n\n[[2]]\nNULL\n\n[[3]]\nNULL\n\n[[4]]\nNULL\n\n",
        "> ",
        "# rm(list=ls(all.names = TRUE))",
        "> ",
        "",
        "> ",
        "# Document and reload your package",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "mobilequake::run_app()",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:5259\n",
        "Warning:",
        " Error in f7Page: could not find function \"f7Page\"\n",
        "  50: [37mdots_list[39m\n",
        "",
        "  49: [37mtagList[39m\n",
        "",
        "  48: [34m[1mui [C:/Users/serda/Documents/workingdirectory/CoronaOutbreak/mobilequake/R/app_ui.R#3][22m[39m\n",
        "\n",
        "\n",
        "> ",
        "",
        "> ",
        "# Set options here",
        "> ",
        "options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode",
        "> ",
        "",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "[[1]]\nNULL\n\n[[2]]\nNULL\n\n[[3]]\nNULL\n\n",
        "> ",
        "# rm(list=ls(all.names = TRUE))",
        "> ",
        "",
        "> ",
        "# Document and reload your package",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "mobilequake::run_app()",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:5259\n",
        "\n",
        "\n",
        "> ",
        "",
        "> ",
        "remove.packages(leaflet)",
        "Error in remove.packages : object 'leaflet' not found\n",
        "> ",
        "remove.packages('leaflet')",
        "Removing package from ‘C:/Users/serda/Documents/R/win-library/3.6’\n(as ‘lib’ is unspecified)\n",
        "> ",
        "install.packages(\"leaflet\")",
        "Installing package into ‘C:/Users/serda/Documents/R/win-library/3.6’\n(as ‘lib’ is unspecified)\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/leaflet_2.0.3.zip'\n",
        "Content type 'application/zip'",
        " length 2335328 bytes (2.2 MB)\n",
        "downloaded 2.2 MB\n\n",
        "package ‘leaflet’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\serda\\AppData\\Local\\Temp\\RtmpcZ4NbN\\downloaded_packages\n",
        "> ",
        "roxygenize()",
        "Error in roxygenize() : could not find function \"roxygenize\"\n",
        "> ",
        "reoxygenize()",
        "Error in reoxygenize() : could not find function \"reoxygenize\"\n",
        "> ",
        "library(roxygen2)",
        "> ",
        "reoxygenize()",
        "Error in reoxygenize() : could not find function \"reoxygenize\"\n",
        "> ",
        "roxygenize()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "> ",
        "roxygenize()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "> ",
        "roxygenize()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "> ",
        "roxygen2::roxygenize()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "> ",
        "package.dependencies(x, check = FALSE,",
        "+ ",
        "                     depLevel = c(\"Depends\", \"Imports\", \"Suggests\"))",
        "Error in package.dependencies(x, check = FALSE, depLevel = c(\"Depends\",  : \n  could not find function \"package.dependencies\"\n",
        "> ",
        "roxygen2::roxygenize()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "> ",
        "remove.packages(leaflet)",
        "Removing package from ‘C:/Users/serda/Documents/R/win-library/3.6’\n(as ‘lib’ is unspecified)\n",
        "Error in remove.packages : 'match' requires vector arguments\n",
        "> ",
        "# Set options here",
        "> ",
        "options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode",
        "> ",
        "",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "[[1]]\nNULL\n\n[[2]]\nNULL\n\n[[3]]\nNULL\n\n[[4]]\nNULL\n\n",
        "> ",
        "# rm(list=ls(all.names = TRUE))",
        "> ",
        "",
        "> ",
        "# Document and reload your package",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "mobilequake::run_app()",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:5259\n",
        "\n",
        "\n",
        "> ",
        "",
        "> ",
        "#' @import shiny",
        "> ",
        "remove.packages(\"leaflet\")",
        "Removing package from ‘C:/Users/serda/Documents/R/win-library/3.6’\n(as ‘lib’ is unspecified)\n",
        "> ",
        "install.packages(\"leaflet\")",
        "Installing package into ‘C:/Users/serda/Documents/R/win-library/3.6’\n(as ‘lib’ is unspecified)\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/leaflet_2.0.3.zip'\n",
        "Content type 'application/zip'",
        " length 2335328 bytes (2.2 MB)\n",
        "downloaded 2.2 MB\n\n",
        "package ‘leaflet’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\serda\\AppData\\Local\\Temp\\RtmpcZ4NbN\\downloaded_packages\n",
        "> ",
        "# Set options here",
        "> ",
        "options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode",
        "> ",
        "",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "[[1]]\nNULL\n\n[[2]]\nNULL\n\n[[3]]\nNULL\n\n",
        "> ",
        "# rm(list=ls(all.names = TRUE))",
        "> ",
        "",
        "> ",
        "# Document and reload your package",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "mobilequake::run_app()",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:5259\n",
        "\n",
        "\n",
        "> ",
        "",
        "> ",
        "?as.difftime()",
        "> ",
        "df",
        "function (x, df1, df2, ncp, log = FALSE) \n{\n    if (missing(ncp)) \n        .Call(C_df, x, df1, df2, log)\n    else .Call(C_dnf, x, df1, df2, ncp, log)\n}\n<bytecode: 0x00000255efc32d38>\n<environment: namespace:stats>\n",
        "> ",
        "url <- (\"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_week.csv\")",
        "> ",
        "df <- readr::read_csv(url, col_types = readr::cols())",
        "> ",
        "df",
        "[90m# A tibble: 2,211 x 22[39m\n   time                latitude longitude  depth   mag magType   nst   gap    dmin\n   [3m[90m<dttm>[39m[23m                 [3m[90m<dbl>[39m[23m     [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m   [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m\n[90m 1[39m 2020-02-19 [90m17:56:52[39m    35.7      -[31m118[39m[31m.[39m   8.24  0.87 ml         10  247  0.112  \n[90m 2[39m 2020-02-19 [90m17:54:19[39m    34.6      -[31m120[39m[31m.[39m   2.4   1.53 ml         13   58  0.130  \n",
        "[90m 3[39m 2020-02-19 [90m17:47:57[39m    36.1      -[31m118[39m[31m.[39m  -[31m0[39m[31m.[39m[31m33[39m  0.83 ml         14  112  0.202  \n[90m 4[39m 2020-02-19 [90m17:46:20[39m    19.2      -[31m155[39m[31m.[39m  30.8   1.75 md         25  164  0.080[4m2[24m \n[90m 5[39m 2020-02-19 [90m17:40:56[39m    19.2      -[31m155[39m[31m.[39m  31.3   2.18 md         12  224  0.070[4m7[24m \n[90m 6[39m 2020-02-19 [90m17:37:35[39m    -[31m5[39m[31m.[39m[31m61[39m      149. 174.    4.8  mb         [31mNA[39m   73  3.38   \n",
        "[90m 7[39m 2020-02-19 [90m17:26:52[39m    38.5      -[31m118[39m[31m.[39m   0.4   1.8  ml          8  151. 0.246  \n[90m 8[39m 2020-02-19 [90m17:24:29[39m    35.7      -[31m117[39m[31m.[39m   8.93  1.37 ml         18  125  0.156  \n[90m 9[39m 2020-02-19 [90m17:23:09[39m    38.8      -[31m123[39m[31m.[39m   2.95  0.32 md         11   57  0.009[4m3[24m[4m6[24m\n[90m10[39m 2020-02-19 [90m17:19:15[39m    19.2      -[31m155[39m[31m.[39m  30.0   2    md         24  208  0.015[4m2[24m \n",
        "[90m# ... with 2,201 more rows, and 13 more variables: rms [3m[90m<dbl>[90m[23m, net [3m[90m<chr>[90m[23m,\n#   id [3m[90m<chr>[90m[23m, updated [3m[90m<dttm>[90m[23m, place [3m[90m<chr>[90m[23m, type [3m[90m<chr>[90m[23m, horizontalError [3m[90m<dbl>[90m[23m,\n#   depthError [3m[90m<dbl>[90m[23m, magError [3m[90m<dbl>[90m[23m, magNst [3m[90m<dbl>[90m[23m, status [3m[90m<chr>[90m[23m,\n#   locationSource [3m[90m<chr>[90m[23m, magSource [3m[90m<chr>[90m[23m[39m\n",
        "> ",
        "dt <- as.POSIXlt(Sys.time(), tz = \"UTC\")",
        "> ",
        "new.dt <- dt - as.difftime(6, units=\"hours\")",
        "> ",
        "new.dt",
        "[1] \"2020-02-19 12:27:06 UTC\"\n",
        "> ",
        "new.dt <- dt - as.difftime(6, unit=\"hours\")",
        "> ",
        "new.dt",
        "[1] \"2020-02-19 12:27:06 UTC\"\n",
        "> ",
        "testthat(app",
        "+ ",
        ")",
        "Error in testthat(app) : could not find function \"testthat\"\n",
        "> ",
        "# Set options here",
        "> ",
        "options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode",
        "> ",
        "",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "[[1]]\nNULL\n\n[[2]]\nNULL\n\n[[3]]\nNULL\n\n",
        "> ",
        "# rm(list=ls(all.names = TRUE))",
        "> ",
        "",
        "> ",
        "# Document and reload your package",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "mobilequake::run_app()",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:5259\n",
        "\n",
        "\n",
        "> ",
        "",
        "> ",
        "golem::use_utils_ui()",
        "[32m√[39m File created at C:\\Users\\serda\\Documents\\workingdirectory\\CoronaOutbreak\\mobilequake/R/golem_utils_ui.R\n[32m√[39m Utils UI added\n\nRestarting R session...\n\n",
        "> ",
        "golem::add_utils()",
        "[31m*[39m Couldn't find golem working directory\n[32m√[39m Definining golem working directory as `.`\nYou can change golem working directory with set_golem_wd('path/to/wd')\n[32m√[39m Definining golem working directory as `C:/Users/serda/Documents/workingdirectory/CoronaOutbreak/mobilequake`\n",
        "Error in add_r_files(name, module, ext = \"utils\", pkg = pkg, open = open,  : \n  argument \"name\" is missing, with no default\n",
        "> ",
        "library(golem)",
        "> ",
        "golem::add_utils()",
        "Error in add_r_files(name, module, ext = \"utils\", pkg = pkg, open = open,  : \n  argument \"name\" is missing, with no default\n",
        "> ",
        "golem::add_utils(\"utils.R\")",
        "> ",
        "golem::add_utils()",
        "Error in add_r_files(name, module, ext = \"utils\", pkg = pkg, open = open,  : \n  argument \"name\" is missing, with no default\n",
        "> ",
        "?golem::add_utils()",
        "> ",
        "# Set options here",
        "> ",
        "options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode",
        "> ",
        "",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "[[1]]\nNULL\n\n",
        "> ",
        "# rm(list=ls(all.names = TRUE))",
        "> ",
        "",
        "> ",
        "# Document and reload your package",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting includeRMarkdown.Rd\nWriting run_app.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "mobilequake::run_app()",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:6559\n",
        "\n",
        "\n",
        "> ",
        "",
        "> ",
        "# Set options here",
        "> ",
        "options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode",
        "> ",
        "",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "[[1]]\nNULL\n\n[[2]]\nNULL\n\n[[3]]\nNULL\n\n",
        "> ",
        "# rm(list=ls(all.names = TRUE))",
        "> ",
        "",
        "> ",
        "# Document and reload your package",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "Deleting includeRMarkdown.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "mobilequake::run_app()",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:6559\n",
        "\n",
        "\n",
        "> ",
        "",
        "> ",
        "test_check(\"mobilequake\")",
        "Error: No tests found for mobilequake\n",
        "> ",
        "golem::use_recommended_tests()",
        "[32m√[39m Tests added\n",
        "> ",
        "devtools::test()",
        "Loading mobilequake\n",
        "Testing mobilequake\n",
        "√ |  OK [31mF[39m [35mW[39m [34mS[39m | Context\n\r/ |   0       | app\r[32m√[39m |   1       | app\n\r/ |   0       | golem tests\r| |   3       | golem tests\r[32m√[39m |   3       | golem tests[36m [5.1 s][39m\n\n== [1mResults[22m =====================================================================\n[36mDuration: 5.1 s[39m\n\nOK:       [32m4[39m\nFailed:   [32m0[39m\nWarnings: [32m0[39m\nSkipped:  [32m0[39m\n\n[32mWoot![39m\n",
        "> ",
        "# Set options here",
        "> ",
        "options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode",
        "> ",
        "",
        "> ",
        "# Detach all loaded packages and clean your environment",
        "> ",
        "golem::detach_all_attached()",
        "[[1]]\nNULL\n\n[[2]]\nNULL\n\n[[3]]\nNULL\n\n[[4]]\nNULL\n\n",
        "> ",
        "# rm(list=ls(all.names = TRUE))",
        "> ",
        "",
        "> ",
        "# Document and reload your package",
        "> ",
        "golem::document_and_reload()",
        "Writing NAMESPACE\n",
        "Loading mobilequake\n",
        "Writing NAMESPACE\nWriting run_app.Rd\n",
        "Loading mobilequake\n",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "mobilequake::run_app()",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:6559\n",
        "\n",
        "\n",
        "> ",
        "",
        "\nRestarting R session...\n\n"
    ],
    "type" : [
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        3,
        2,
        0,
        1,
        2,
        3,
        2,
        0,
        1,
        2,
        3,
        2,
        0,
        1,
        2,
        3,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        3,
        2,
        0,
        1,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        2
    ]
}